<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.blog.entity.Blog">
        <id column="blog_id" jdbcType="BIGINT" property="blogId" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
        <result column="blog_desc" jdbcType="VARCHAR" property="blogDesc" />
        <result column="category_id" jdbcType="BIGINT" property="categoryId" />
        <result column="blog_status" jdbcType="INTEGER" property="blogStatus" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="blog_content" jdbcType="VARCHAR" property="blogContent" />

<!--        <collection property="tags" ofType="com.blog.entity.BlogTag">
            <id column="tag_id" jdbcType="BIGINT" property="tagId" />
            <result column="blog_id" jdbcType="BIGINT" property="blogId" />
        </collection>-->
    </resultMap>
    <sql id="Base_Column_List">
        blog_id, user_id, blog_title, blog_desc, category_id, blog_status, create_time, update_time, blog_content
    </sql>
    <select id="selectById" resultType="com.blog.entity.Blog">
        select
        <include refid="Base_Column_List" />
        from user where blog_id = #{blogId}
    </select>
    <insert id="insertBlog" parameterType="com.blog.entity.Blog">
        INSERT INTO blog(blog_id, user_id, blog_title, blog_desc, category_id, blog_status, blog_content)
        values (#{blogId}, #{userId}, #{blogTitle},#{blogDesc}, #{categoryId}, #{blogStatus}, #{blogContent})
    </insert>

    <select id="selectArticleListByCondition" resultMap="BlogConditionQuery">
        SELECT a.blog_id,
        a.blog_title,
        a.creat_time,
        c.category_id AS category_id,
        c.category_name,
        t.tag_id AS tag_id,
        t.tag_name
        FROM blog a
        INNER JOIN category c ON a.category_id = c.category_id
        INNER JOIN blog_tag bta ON a.blog_id = bta.blog_id
        INNER JOIN tag t ON t.tag_id = bta.blog_id
        <where> `status` = 1
            <if test="param.categoryId != null">
                and category_id = #{param.categoryId}
            </if>
            <if test="param.tagId != null">
                and tag_id = #{param.tagId}
            </if>
        </where>
        ORDER BY a.id DESC
        LIMIT #{param.current}, #{param.size}
    </select>
</mapper>